const express = require('express');
const router = express.Router();
const pokemon = require('pokemontcgsdk');
pokemon.configure({apiKey: '${process.env.API_KEY}'});

router.get('/', function(req, res,next) {
    res.write('<!DOCTYPE html>');
    res.write('<html lang="en">');
    res.write('<head>');
    res.write('<meta charset="UTF-8">');
    res.write('<meta name="viewport" content="width=device-width, initial-scale=1.0">');
    res.write('<title>Pokemon Search</title>');
    res.write('<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">');
    res.write('<link href="https://fonts.googleapis.com/css?family=Press+Start+2P" rel="stylesheet"> <!-- PokÃ©mon-like font --></link>');
    res.write('<style>');
    res.write('body {');
    res.write('color: #FFCB05;')
    res.write('text-shadow: 2px 2px 5px red;')
    res.write(' background-image: url(\'img/landscape.png\');');
    res.write('margin: 0;');
    res.write('padding: 0;');
    res.write('}');
    res.write('header {');
    res.write('     text-shadow: 2px 2px 5px black;')
    res.write('    background-color: #3B4CCA;'); 
    res.write('    padding: 20px 15px;'); 
    res.write('    text-align: center;');
    res.write('    color: white;'); 
    res.write('    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);'); 
    res.write('    font-family: \'Press Start 2P\', cursive;'); 
    res.write('    font-size: 24px;'); 
    res.write('    border-bottom: 3px solid #3B4CCA;'); 
    res.write('    margin-bottom: 25px;');
    res.write('}');
    res.write('main {');
    res.write('padding: 20px;');
    res.write('text-align: center;');
    res.write('}');
    res.write('img {');
    res.write('box-shadow: 8px 8px 5px black;')
    res.write('width: 150px;');
    res.write('margin: 10px;');
    res.write('}');
    res.write('</style>');
    res.write('</head>');
    res.write('<body>');
    res.write('<header>');
    res.write('<h1>Pokemon TCG</h1>');
    res.write('</header>');
    res.write('<main id="pokemonResults">');
    let id = req.query.id;
    let name = req.query.name;
    pokemon.card.find(id).then(card => {
        res.write('<style>');
        res.write('table { width: 100%; border-collapse: collapse; margin-top: 20px; border-color: #3B4CCA}');
        res.write('th, td { border: 1px solid #ddd; padding: 8px; text-align: left; border-color: #3B4CCA; border-width: 3px}');
        res.write('th { background-color: #636fcf; border-color: #3B4CCA; border-width: 3px;}');
        res.write('tr:nth-child(even){background-color: #636fcf;}');
        res.write('.image-container { text-align: center; margin-bottom: 20px; }');
        res.write('img { max-width: 500px; height: auto; }');
        res.write('</style>');
        res.write('<h1>' + card.name +' ' + card.id + '</h1>');  
        res.write('<div class="image-container">');
        res.write('<img src="' + card.images.large + '" alt="Image of ' + card.name + '">');
        res.write('</div>');
        res.write('<p>' + card.text + '</p>');
        res.write('<table>');
        res.write('<tr><th>HP</th><td>' + card.hp + '</td></tr>');
        res.write('<tr><th>Evolves From</th><td>' + (card.evolvesFrom || 'N/A') + '</td></tr>');
        res.write('<h3>Attacks</h3>');
        res.write('<tr><th>Name</th><th>Description</th><th>Damage</th><th>Energy Cost</th></tr>');
        for(let i = 0; i < card.attacks.length; i++) {
            res.write('<tr>');
            res.write('<td>' + card.attacks[i].name + '</td>');
            res.write('<td>' + card.attacks[i].text + '</td>');
            res.write('<td>' + card.attacks[i].damage + '</td>');
            res.write('<td>' + card.attacks[i].convertedEnergyCost + '</td>');
            res.write('</tr>');
        }
        res.write('</table>');
        res.write('<table>');
        res.write('<h3>Set Information</h3>');
        res.write('<tr><th>Set</th><th>Rarity</th><th>Number</th></tr>');
            res.write('<tr>');
            res.write('<td>' + card.set.name + '</td>');
            res.write('<td>' + card.rarity + '</td>');
            res.write('<td>' + card.number + '</td>');
            res.write('</tr>');
        res.write('</table>');
        res.write('<table>');
        res.write('<h3>Prices</h3>');
            res.write('<tr><th>Avg Sell Price(USD) </th><th>Low Price(USD) </th><th>Trend Price(USD)</th><th>7 Day Average(USD)</th><th>30 Day Average(USD)</th></tr>');
            res.write('<tr>');
            res.write('<td>' + (card.cardmarket.prices.averageSellPrice*1.08).toFixed(2) + '</td>');
            res.write('<td>' + (card.cardmarket.prices.lowPrice*1.08).toFixed(2) + '</td>');
            res.write('<td>' + (card.cardmarket.prices.trendPrice*1.08).toFixed(2) + '</td>');
            res.write('<td>' + (card.cardmarket.prices.avg7*1.08).toFixed(2) + '</td>');
            res.write('<td>' + (card.cardmarket.prices.avg30*1.08).toFixed(2) + '</td>');
            res.write('</tr>');
            res.write('<tr><th>Avg Sell Price(CAD) </th><th>Low Price(CAD) </th><th>Trend Price(CAD)</th><th>7 Day Average(CAD)</th><th>30 Day Average(CAD)</th></tr>'); 
            res.write('<tr>');
            res.write('<td>' + (card.cardmarket.prices.averageSellPrice*1.45).toFixed(2) + '</td>');
            res.write('<td>' + (card.cardmarket.prices.lowPrice*1.45).toFixed(2) + '</td>');
            res.write('<td>' + (card.cardmarket.prices.trendPrice*1.45).toFixed(2) + '</td>');
            res.write('<td>' + (card.cardmarket.prices.avg7*1.45).toFixed(2) + '</td>');
            res.write('<td>' + (card.cardmarket.prices.avg30*1.45).toFixed(2) + '</td>');
            res.write('</tr>');  
        res.write('</table>');
        res.write('</main>');
        res.write('</body>');
        res.write('</html>');
        res.end();
        });
    });
module.exports = router;